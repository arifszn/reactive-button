(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{105:function(e,t,n){"use strict";var a,i,l,c,o,b,r=n(119),s=n(0),d=n.n(s),u=n(120),g=n(113),m=n(101),O=n(104),j=Object(u.b)(g.d)(a||(a=Object(r.a)(["\nborder-radius: 3px;\nbox-shadow: 1px 1px 20px rgba(20, 20, 20, 0.27);\noverflow: hidden;\nmargin-bottom: 100px;\n"]))),p=u.b.div(i||(i=Object(r.a)(["\ndisplay: flex;\nflex-direction: row;\njustify-content: stretch;\nalign-items: stretch;\n@media (max-width: 600px) {\n    flex-direction: column;\n}\n"]))),v=Object(u.a)(l||(l=Object(r.a)(["\nflex-basis: ",";\nwidth: ",";\nmax-width: ",";\n@media (max-width: 600px) {\n    flex-basis: auto;\n    width: 100%;\n    max-width: 100%;\n    height: ",";\n    max-height: ",";\n}\n"])),(function(e){return e.previewOnly?"100%":"50%"}),(function(e){return e.previewOnly?"100%":"50%"}),(function(e){return e.previewOnly?"100%":"50%"}),(function(e){return e.height}),(function(e){return e.height})),h=u.b.div(c||(c=Object(r.a)(["\nfont-family: 'Source Code Pro', monospace;\nfont-size: 14px;\nheight: ",";\nmax-height: ",";\noverflow: auto;\n",";\n* > textarea:focus {\n    outline: none;\n}\n"])),(function(e){return e.height}),(function(e){return e.height}),v),f=Object(u.b)(g.c)(o||(o=Object(r.a)(["\nposition: relative;\npadding: 1.5rem;\nbackground: ",";\ncolor: black;\nheight: auto;\noverflow: hidden;\ndisplay: flex;\njustify-content: center;\nflex-direction: row;\nalign-items: center;\nflex-wrap: wrap;\n",";\n"])),(function(e){return e.isDarkTheme?"#232525":"#e3eaea"}),v),x=Object(u.b)(g.b)(b||(b=Object(r.a)(["\ndisplay: block;\npadding: 0.5rem;\nbackground: ",";\ncolor: ",";\nwhite-space: pre-wrap;\ntext-align: left;\nfont-size: 0.9em;\nfont-family: 'Source Code Pro', monospace;\n"])),"#ff5555","#f8f8f2");t.a=function(e){var t=e.noInline,n=e.code,a=e.scope,i=e.height,l=e.previewOnly,c=void 0!==l&&l,o=Object(m.a)().isDarkTheme;return d.a.createElement(j,{code:n,noInline:t,theme:O.a,scope:a},d.a.createElement(p,null,!c&&d.a.createElement(h,{previewOnly:c,height:i},d.a.createElement(g.a,null)),d.a.createElement(f,{isDarkTheme:o})),d.a.createElement(x,null))}},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return d})),n.d(t,"metadata",(function(){return u})),n.d(t,"toc",(function(){return g})),n.d(t,"default",(function(){return O}));var a=n(3),i=n(8),l=(n(0),n(102)),c=n(105);var o=n(96),b=n(99),r=n(98),s=n(94),d={id:"usage",title:"Usage"},u={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Below example demonstrates an asynchronous task. When clicking the button, an asynchronous task (e.g. Data fetch, form submit) will be processed and after processing, a success or error message will be displayed.",source:"@site/docs/usage.md",slug:"/usage",permalink:"/reactive-button/docs/usage",version:"current",sidebar:"docs",previous:{title:"Installation",permalink:"/reactive-button/docs/installation"},next:{title:"Playground",permalink:"/reactive-button/docs/playground"}},g=[{value:"Basic Usage",id:"basic-usage",children:[]},{value:"Full Usage",id:"full-usage",children:[]},{value:"Other Usage",id:"other-usage",children:[{value:"Color",id:"color",children:[]},{value:"Size",id:"size",children:[]},{value:"Style",id:"style",children:[]},{value:"Existing State",id:"existing-state",children:[]},{value:"Without State",id:"without-state",children:[]},{value:"Using Icons",id:"using-icons",children:[]},{value:"Form Submit",id:"form-submit",children:[]},{value:"Anchor Tag",id:"anchor-tag",children:[]}]},{value:"Available Props",id:"available-props",children:[]}],m={toc:g};function O(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Below example demonstrates an asynchronous task. When clicking the button, an asynchronous task (e.g. Data fetch, form submit) will be processed and after processing, a success or error message will be displayed."))),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Initialize a state with string value ",Object(l.b)("code",null,"'idle'")," and assign it as ",Object(l.b)("strong",null,"'buttonState'")," prop. Now it will render an idle text."),Object(l.b)("li",{parentName:"ul"},"When the button is clicked, set state's value to ",Object(l.b)("code",null,"'loading'"),". "),Object(l.b)("li",{parentName:"ul"},"When the task is completed, set state to ",Object(l.b)("code",null,"'success'"),", ",Object(l.b)("code",null,"'error'")," or ",Object(l.b)("code",null,"'idle'")," according to your need.")),Object(l.b)("h2",{id:"basic-usage"},"Basic Usage"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport ReactiveButton from 'reactive-button';\n\nfunction App() {\n   const [state, setState] = useState('idle');\n\n   const onClickHandler = () => {\n      setState('loading');\n      setTimeout(() => {\n         setState('success');\n      }, 2000);\n   }\n\n   return (\n      <ReactiveButton\n         buttonState={state}\n         onClick={onClickHandler}\n      />\n   );\n}\n\nexport default App;\n")),Object(l.b)("h2",{id:"full-usage"},"Full Usage"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport ReactiveButton from 'reactive-button';\n\nfunction App() {\n   const [state, setState] = useState('idle');\n\n   const onClickHandler = () => {\n      setState('loading');\n      setTimeout(() => {\n         setState('success');\n      }, 2000);\n   }\n\n   return (\n      <ReactiveButton\n         buttonState={state}\n         onClick={onClickHandler}\n         color={'primary'}\n         idleText={'Button'}\n         loadingText={'Loading'}\n         successText={'Success'}\n         errorText={'Error'}\n         type={'button'}\n         className={'class1 class2'}\n         style={{ borderRadius: '5px' }}\n         outline={false}\n         shadow={false}\n         rounded={false}\n         size={'normal'}\n         block={false}\n         messageDuration={2000}\n         disabled={false}\n         buttonRef={null}\n         width={null}\n         height={null}\n         animation={true}\n    />\n  );\n}\n\nexport default App;\n")),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"For non asynchronous task, state management is not needed. Use as like normal button."))),Object(l.b)("h2",{id:"other-usage"},"Other Usage"),Object(l.b)("p",null,"Reactive Button has all the functionalities of a normal button."),Object(l.b)("h3",{id:"color"},"Color"),Object(l.b)("p",null,"Reactive Button comes with 10 default color options."),Object(l.b)("div",null,Object(l.b)(c.a,{code:'\n<div>\n    <section className="flex-section">\n        <div className="item p-1"><ReactiveButton idleText="Primary" color="primary"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Secondary" color="secondary"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Teal" color="teal"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Green" color="green"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Red" color="red"/></div>\n    </section>\n    <section className="flex-section">\n        \n        <div className="item p-1"><ReactiveButton idleText="Violet" color="violet"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Blue" color="blue"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Yellow" color="yellow"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Dark" color="dark"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Light" color="light"/></div>\n    </section>\n</div>\n',scope:{ReactiveButton:o.a,FontAwesomeIcon:r.a,faReply:b.i},previewOnly:!0,mdxType:"Playground"})),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<ReactiveButton color="primary"/>\n<ReactiveButton color="secondary"/>\n<ReactiveButton color="teal"/>\n<ReactiveButton color="green"/>\n<ReactiveButton color="red"/>\n<ReactiveButton color="violet"/>\n<ReactiveButton color="blue"/>\n<ReactiveButton color="yellow"/>\n<ReactiveButton color="dark"/>\n<ReactiveButton color="light"/>\n')),Object(l.b)("h3",{id:"size"},"Size"),Object(l.b)("p",null,"There are 4 sizes available."),Object(l.b)("div",null,Object(l.b)(c.a,{code:'\n<div>\n    <section className="flex-section">\n        <div className="item p-1"><ReactiveButton idleText="Tiny" size="tiny"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Small" size="small"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Medium" size="medium"/></div>\n        <div className="item p-1"><ReactiveButton idleText="Large" size="large"/></div>\n    </section>\n</div>\n',scope:{ReactiveButton:o.a,FontAwesomeIcon:r.a,faReply:b.i},previewOnly:!0,mdxType:"Playground"})),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<ReactiveButton size="tiny"/>\n<ReactiveButton size="small"/>\n<ReactiveButton size="medium"/>\n<ReactiveButton size="large"/>\n')),Object(l.b)("h3",{id:"style"},"Style"),Object(l.b)("p",null,"Make the buttons more beautiful with these customization options."),Object(l.b)("div",null,Object(l.b)(c.a,{code:'\n<div>\n    <section className="flex-section">\n        <div className="item p-1"><ReactiveButton idleText="Outline" outline/></div>\n        <div className="item p-1"><ReactiveButton idleText="Rounded" rounded/></div>\n        <div className="item p-1"><ReactiveButton idleText="Shadow" shadow/></div>\n    </section>\n</div>\n',scope:{ReactiveButton:o.a,FontAwesomeIcon:r.a,faReply:b.i},previewOnly:!0,mdxType:"Playground"})),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},"<ReactiveButton outline/>\n<ReactiveButton rounded/>\n<ReactiveButton shadow/>\n")),Object(l.b)("h3",{id:"existing-state"},"Existing State"),Object(l.b)("p",null,"In your project, There might be existing state for loading indicator which accepts boolean value only. If you don't want to define new state for Reactive Button, then utilize the existing state."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},"const [loading, setLoading] = useState(false);\n\nreturn (\n   <ReactiveButton\n      buttonState={loading ? 'loading' : 'idle'}\n      idleText={'Button'}\n      loadingText={'Loading'}\n   />\n);\n")),Object(l.b)("h3",{id:"without-state"},"Without State"),Object(l.b)("p",null,"You are not limited to use state always."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<ReactiveButton\n   onClick={doSomething}\n   idleText={"Some Text"}\n/>\n')),Object(l.b)("h3",{id:"using-icons"},"Using Icons"),Object(l.b)("p",null,"You can use your own icons. Don't forget to wrap them with a parent element."),Object(l.b)("div",null,Object(l.b)(c.a,{code:"<ReactiveButton\n   idleText={<span><FontAwesomeIcon icon={faReply}/> Send</span>}\n/>",scope:{ReactiveButton:o.a,FontAwesomeIcon:r.a,faReply:b.i},previewOnly:!0,mdxType:"Playground"})),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},"<ReactiveButton\n   idleText={<span><FontAwesomeIcon icon={faReply}/> Send</span>}\n/>\n")),Object(l.b)("h3",{id:"form-submit"},"Form Submit"),Object(l.b)("p",null,"If you need to submit form by button clicking, set the ",Object(l.b)("code",null,"type")," prop as '",Object(l.b)("strong",null,"submit"),"'. "),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<form>\n   <input type="text" name="username"/>\n   <input type="password" name="password"/>\n   <ReactiveButton\n      type={\'submit\'}\n      idleText="Submit"\n   />\n</form>\n')),Object(l.b)("h3",{id:"anchor-tag"},"Anchor Tag"),Object(l.b)("p",null,"To use Reactive button as anchor tag, simply wrap it with an anchor tag."),Object(l.b)("div",null,Object(l.b)(c.a,{code:'<a href="https://github.com/" target="_blank">\n   <ReactiveButton\n      idleText="Visit Github"\n   />\n</a>',scope:{ReactiveButton:o.a},previewOnly:!0,mdxType:"Playground"})),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<a href="https://github.com/" target="_blank">\n   <ReactiveButton idleText="Visit Github" />\n</a>\n')),Object(l.b)("strong",null,"Note:")," For more usage, visit ",Object(l.b)(s.a,{to:"/docs/Playground",mdxType:"Link"},"Playground"),".",Object(l.b)("h2",{id:"available-props"},"Available Props"),Object(l.b)("div",{className:"z-table-wrapper"},Object(l.b)("table",null,Object(l.b)("thead",null,Object(l.b)("tr",null,Object(l.b)("th",{align:"left"},"Props"),Object(l.b)("th",{align:"center"},"Type"),Object(l.b)("th",{align:"left"},"Description"),Object(l.b)("th",{align:"center"},"Default"))),Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"buttonState"),Object(l.b)("td",{align:"center"},"string"),Object(l.b)("td",{align:"left"},"Current button state"),Object(l.b)("td",{align:"center"},"'idle'")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"onClick"),Object(l.b)("td",{align:"center"},"function"),Object(l.b)("td",{align:"left"},"Callback function when clicking button"),Object(l.b)("td",{align:"center"}," ","() => {}"," ")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"color"),Object(l.b)("td",{align:"center"},"string"),Object(l.b)("td",{align:"left"},"Button color"),Object(l.b)("td",{align:"center"},"'primary'")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"idleText"),Object(l.b)("td",{align:"center"},"string | ReactNode"),Object(l.b)("td",{align:"left"},"Button text when idle"),Object(l.b)("td",{align:"center"},"'Click Me'")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"loadingText"),Object(l.b)("td",{align:"center"},"string | ReactNode"),Object(l.b)("td",{align:"left"},"Button text when loading"),Object(l.b)("td",{align:"center"},"'Loading'")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"successText"),Object(l.b)("td",{align:"center"},"string | ReactNode"),Object(l.b)("td",{align:"left"},"Button text when loading successful"),Object(l.b)("td",{align:"center"},"'Success'")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"errorText"),Object(l.b)("td",{align:"center"},"string | ReactNode"),Object(l.b)("td",{align:"left"},"Button text when loading failed"),Object(l.b)("td",{align:"center"},"'Error'")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"type"),Object(l.b)("td",{align:"center"},"string"),Object(l.b)("td",{align:"left"},"Button type attribute"),Object(l.b)("td",{align:"center"},"'button'")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"className"),Object(l.b)("td",{align:"center"},"string"),Object(l.b)("td",{align:"left"},"Button classnames"),Object(l.b)("td",{align:"center"},"''")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"style"),Object(l.b)("td",{align:"center"},"React.CSSProperties"),Object(l.b)("td",{align:"left"},"Custom style"),Object(l.b)("td",{align:"center"},"{}")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"outline"),Object(l.b)("td",{align:"center"},"boolean"),Object(l.b)("td",{align:"left"},"Enable outline effect"),Object(l.b)("td",{align:"center"},"false")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"shadow"),Object(l.b)("td",{align:"center"},"boolean"),Object(l.b)("td",{align:"left"},"Enable shadow effect"),Object(l.b)("td",{align:"center"},"false")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"rounded"),Object(l.b)("td",{align:"center"},"boolean"),Object(l.b)("td",{align:"left"},"Enable rounded button"),Object(l.b)("td",{align:"center"},"false")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"size"),Object(l.b)("td",{align:"center"},"string"),Object(l.b)("td",{align:"left"},"Button size"),Object(l.b)("td",{align:"center"},"'normal'")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"block"),Object(l.b)("td",{align:"center"},"boolean"),Object(l.b)("td",{align:"left"},"Block Button"),Object(l.b)("td",{align:"center"},"false")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"messageDuration"),Object(l.b)("td",{align:"center"},"number"),Object(l.b)("td",{align:"left"},"Success/Error message duration in millisecond"),Object(l.b)("td",{align:"center"},"2000")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"disabled"),Object(l.b)("td",{align:"center"},"boolean"),Object(l.b)("td",{align:"left"},"Disable button"),Object(l.b)("td",{align:"center"},"false")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"buttonRef"),Object(l.b)("td",{align:"center"},"React.Ref | null"),Object(l.b)("td",{align:"left"},"Button reference"),Object(l.b)("td",{align:"center"},"null")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"width"),Object(l.b)("td",{align:"center"},"string | null"),Object(l.b)("td",{align:"left"},"Override button width"),Object(l.b)("td",{align:"center"},"null")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"height"),Object(l.b)("td",{align:"center"},"string | null"),Object(l.b)("td",{align:"left"},"Override button height"),Object(l.b)("td",{align:"center"},"null")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"animation"),Object(l.b)("td",{align:"center"},"boolean"),Object(l.b)("td",{align:"left"},"Button hover and click animation"),Object(l.b)("td",{align:"center"},"true"))))))}O.isMDXComponent=!0}}]);